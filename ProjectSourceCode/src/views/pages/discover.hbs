  <style>
    body {
      font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
      background-color: #ff66b2;
      margin: 0;
      padding: 0;
      
    }

    /* Shooting stars */
    .star {
      position: absolute;
      width: 4px;
      height: 160px;
      background: linear-gradient(45deg, rgba(255,255,255,1), rgba(255,255,255,0));
      opacity: 0.8;
      transform: rotate(45deg);
      animation: shootingStar 5s linear infinite;
      z-index: 2; /* Ensure stars appear above other elements */
    }

    @keyframes shootingStar {
      0% {
        transform: translate(0, 0) rotate(45deg);
        opacity: 0;
      }
      10% {
        opacity: 1;
      }
      100% {
        transform: translate(-800px, 800px) rotate(45deg);
        opacity: 0;
      }
    }

    /* Center stars vertically and start from the right */
    .star {
      top: 50%;
    }

    /* Adjust left positions and animation delays */
    .star:nth-child(1) { animation-delay: 0s; left: 110%; }
    .star:nth-child(2) { animation-delay: 1s; left: 120%; }
    .star:nth-child(3) { animation-delay: 2s; left: 130%; }
    .star:nth-child(4) { animation-delay: 3s; left: 140%; }
    .star:nth-child(5) { animation-delay: 4s; left: 150%; }
    .star:nth-child(6) { animation-delay: 5s; left: 160%; }
    .star:nth-child(7) { animation-delay: 6s; left: 170%; }
    .star:nth-child(8) { animation-delay: 7s; left: 180%; }
    .star:nth-child(9) { animation-delay: 8s; left: 190%; }
    .star:nth-child(10) { animation-delay: 9s; left: 200%; }

    .profile-container {
      max-width: 800px;
      margin: 40px auto;
      background-color: #ffffff;
      padding: 40px;
      border-radius: 15px;
      box-shadow: 0 8px 16px rgba(0, 0, 0, 0.1);
      position: relative;
      z-index: 1;
      text-align: center;
    }

    .title {
      font-family: 'Lobster', cursive;
      font-size: 3rem;
      color: #ff66b2;
      position: relative;
      z-index: 1;
    }

    /* Add star emojis before and after the title */
    .title::before,
    .title::after {
      content: "‚≠ê";
      margin: 0 5px;
    }

    .card-stack {
      position: relative;
      width: 100%;
      height: 500px;
      overflow: hidden;
      margin-top: 30px;
      z-index: 1;
    }

    .content-card {
      position: absolute;
      width: 100%;
      height: 100%;
      background-color: #ffffff;
      border-radius: 15px;
      box-shadow: 0 8px 16px rgba(0,0,0,0.1);
      transition: transform 0.5s ease, opacity 0.5s ease;
      display: flex;
      flex-direction: column;
      align-items: center;
      justify-content: center;
    }

    .content-card img {
      max-width: 90%;
      max-height: 80%;
      border-radius: 8px;
    }

    .content-card h2 {
      margin-top: 20px;
      color: #ff66b2;
    }

    .content-card p {
      color: #ff66b2;
    }

    .btn-swipe {
      margin: 20px;
      padding: 12px 25px;
      color: #ffffff;
      background: linear-gradient(45deg, #ff99cc, #ff66b2);
      text-decoration: none;
      border-radius: 30px;
      font-size: 16px;
      text-align: center;
      transition: background 0.3s ease;
      position: relative;
      overflow: hidden;
      z-index: 1;
      border: none;
    }

    .btn-swipe:hover {
      background: linear-gradient(45deg, #ff80bf, #ff4da6);
    }

    .btn-swipe::after {
      content: '';
      position: absolute;
      left: -50%;
      top: -50%;
      width: 200%;
      height: 200%;
      background: radial-gradient(circle at center, rgba(255, 102, 178, 0.2), transparent 70%);
      opacity: 0;
      transition: opacity 0.3s ease;
    }

    .btn-swipe:hover::after {
      opacity: 1;
    }
  </style>
</head>
<body>
  {{!-- add shooting starts  --}}
  <div class="star"></div>
  <div class="star"></div>
  <div class="star"></div>
  <div class="star"></div>
  <div class="star"></div>
  <div class="star"></div>
  <div class="star"></div>
  <div class="star"></div>
  <div class="star"></div>
  <div class="star"></div>

  <div class="profile-container">
    <h1 class="title">Discover</h1>
    <div class="card-stack" id="cardStack">
      <div class="content-card" id="outfitCard">
        <img id="outfitImage" src="{{outfit.image}}" alt="Outfit Image"> 
        <h2 id="outfitName">{{outfit.name}}</h2>
      </div>
    </div>

    <div class="text-center mt-5">
      <button class="btn-swipe" id="swipeLeft">Swipe Left</button>
      <button class="btn-swipe" id="swipeRight">Swipe Right</button>
    </div>
  </div>

  
  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.1/dist/js/bootstrap.bundle.min.js"></script>
  <script>
    document.addEventListener('DOMContentLoaded', () => {
      const outfitCard = document.getElementById('outfitCard');
      const outfitImage = document.getElementById('outfitImage');
      const outfitName = document.getElementById('outfitName');
      const outfitTags = document.getElementById('outfitTags');
      let currentId = {{outfit.id}}; 
      //this gets the card image name and tags, and gets the specific outfit id 

      const fetchNextOutfit = () => {
        fetch(`/discover/next/${currentId}`)
        //gets the next outfit based on the current id that was made. 
          .then(response => response.json())
          .then(data => {
            if (data.success) {
              const { id, name, tags, image } = data.outfit; // save into data.outfitn 
              currentId = id;
              outfitImage.src = image;
              outfitName.textContent = name;
              outfitTags.textContent = tags;
            } else {
              alert(data.message || 'No more outfits!');
            }
          })
          .catch(error => console.error('Error fetching next outfit:', error));
      };

      document.getElementById('swipeLeft').addEventListener('click', fetchNextOutfit);
      document.getElementById('swipeRight').addEventListener('click', fetchNextOutfit);
    });

  document.addEventListener('DOMContentLoaded', () => {
      const swipeRightButton = document.getElementById('swipeRight');
      // save each outfit when the button swipe right is clicked 

      const saveOutfit = (outfit) => {
        fetch('/save-clothes', {
          method: 'POST',
          headers: { 'Content-Type': 'application/json' },
          body: JSON.stringify({ 
            username: 'currentUsername', // Replace with the actual username
            image: outfit.image
          }),
        })
        .then(response => response.json())
        .then(data => {
          if (data.success) {
            console.log('Outfit saved!');  // save this outfit based on the outfitImage
          } else {
            console.error('Failed to save outfit:', data.message);
          }
        })
        .catch(error => console.error('Error saving outfit:', error));
      };

      swipeRightButton.addEventListener('click', () => {
        const outfit = {
          image: document.getElementById('outfitImage').src, // when clicked save the image 
        };

        saveOutfit(outfit);
        fetchNextOutfit(); // Proceed to the next outfit
      });
    });

  </script>
</body>
</html>
