<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Discover Page</title>
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.1/dist/css/bootstrap.min.css" rel="stylesheet">
  <style>
    body {
      font-family: Arial, sans-serif;
      background-color: #ffe6f0;
      margin: 0;
      padding: 0;
    }

    .profile-container {
      max-width: 500px;
      margin: 20px auto;
      padding: 20px;
      background-color: #ff99cc;
      border-radius: 8px;
      box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
      text-align: center;
    }

    .title {
      text-align: center;
      font-size: 1.5rem;
      font-weight: bold;
      margin-bottom: 20px;
    }

    .card-stack {
      display: flex;
      overflow: hidden;
      position: relative;
      height: 300px;
    }

    .content-card {
      flex: 0 0 100%;
      max-width: 100%;
      transition: transform 0.5s ease;
      position: absolute;
      top: 0;
      left: 0;
      right: 0;
      margin: auto;
      text-align: center;
    }

    .btn-swipe {
      margin: 10px;
    }

    .content-card img {
      max-width: 100%;
      height: auto;
      border-radius: 8px;
    }

    /* Poop styling */
    .poop-text {
      position: fixed;
      top: 50%;
      left: 50%;
      transform: translate(-50%, -50%);
      color: brown;
      font-size: 100px;
      font-weight: bold;
      text-shadow: 2px 2px 5px black;
      z-index: 1000;
    }
  </style>
</head>
<body>
  {{!-- <div class="profile-container">
    <h1 class="title">Discover</h1>
    
    <div class="card-stack" id="cardStack">
      {{#each events}}
      <div class="content-card">
        <img src="{{this.image}}" alt="Event Image">
      </div>
      {{/each}}
    </div>

    <div class="text-center mt-5">
      <button class="btn btn-danger btn-swipe" id="swipeLeft">Swipe Left</button>
      <button class="btn btn-success btn-swipe" id="swipeRight">Swipe Right</button>
    </div>
  </div> --}}

{{!- WITH BASE 64}}
{{!-- <div class="profile-container">
  <h1 class="title">Discover</h1>
  <div class="card-stack" id="cardStack">
  <div class="content-card" id="outfitCard">
    <img id="outfitImage" src="{{outfit.image}}" alt="Outfit Image">
    <h2 id="outfitName">{{outfit.name}}</h2>
    <p id="outfitTags">{{outfit.tags}}</p>
  </div>
  </div>

  <div class="text-center mt-5">
    <button class="btn btn-danger btn-swipe" id="swipeLeft">Swipe Left</button>
    <button class="btn btn-success btn-swipe" id="swipeRight">Swipe Right</button>
  </div>
</div> --}}
<div class="profile-container">
  <h1 class="title">Discover</h1>
  <div class="card-stack" id="cardStack">
    <div class="content-card" id="outfitCard">
      <img id="outfitImage" src={{outfit.image}} alt="Outfit Image">
      <h2 id="outfitName">{{outfit.name}}</h2>
      <p id="outfitTags">{{outfit.tags}}</p>
    </div>
  </div>

  <div class="text-center mt-5">
    <button class="btn btn-danger btn-swipe" id="swipeLeft">Swipe Left</button>
    <button class="btn btn-success btn-swipe" id="swipeRight">Swipe Right</button>
  </div>
</div>

  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.1/dist/js/bootstrap.bundle.min.js"></script>
  <script>

    document.addEventListener('DOMContentLoaded', () => {
  const outfitCard = document.getElementById('outfitCard');
  const outfitImage = document.getElementById('outfitImage');
  const outfitName = document.getElementById('outfitName');
  const outfitTags = document.getElementById('outfitTags');
  let currentId = {{outfit.id}}; // Initialize with the first outfit's ID

  const fetchNextOutfit = () => {
    fetch(`/discover/next/${currentId}`)
      .then(response => response.json())
      .then(data => {
        if (data.success) {
          const { id, name, tags, image } = data.outfit;
          currentId = id;
          outfitImage.src = image;
          outfitName.textContent = name;
          outfitTags.textContent = tags;
        } else {
          alert(data.message || 'No more outfits!');
        }
      })
      .catch(error => console.error('Error fetching next outfit:', error));
  };

  document.getElementById('swipeLeft').addEventListener('click', fetchNextOutfit);
  document.getElementById('swipeRight').addEventListener('click', fetchNextOutfit);
});

document.addEventListener('DOMContentLoaded', () => {
  const swipeRightButton = document.getElementById('swipeRight');

  const saveOutfit = (outfit) => {
    fetch('/save-clothes', {
      method: 'POST',
      headers: { 'Content-Type': 'application/json' },
      body: JSON.stringify({ 
        username: 'currentUsername', // Replace with the actual username
        outfit: {
          image: outfit.image, // Base64 string of the image
        }
      }),
    })
    .then(response => response.json())
    .then(data => {
      if (data.success) {
        console.log('Outfit saved!');
      } else {
        console.error('Failed to save outfit:', data.message);
      }
    })
    .catch(error => console.error('Error saving outfit:', error));
  };

  swipeRightButton.addEventListener('click', () => {
    const outfit = {
      image: document.getElementById('outfitImage').src,
    };

    saveOutfit(outfit);
    fetchNextOutfit(); // Proceed to the next outfit
  });
});


    document.addEventListener('DOMContentLoaded', function () {
  const cardStack = document.getElementById('cardStack');
  const cards = Array.from(cardStack.getElementsByClassName('content-card'));
  let currentIndex = 0;

  const showCard = () => {
    cards.forEach((card, index) => {
      card.style.transform = `translateX(${(currentIndex - index) * 100}%)`;
    });
  };

  const showPoop = () => {
    const poopDiv = document.createElement('div');
    poopDiv.innerText = 'Poop';
    poopDiv.style.position = 'fixed';
    poopDiv.style.top = '50%';
    poopDiv.style.left = '50%';
    poopDiv.style.transform = 'translate(-50%, -50%)';
    poopDiv.style.color = 'black';
    poopDiv.style.fontSize = '600px'; // Really large text
    poopDiv.style.zIndex = 1000;
    poopDiv.style.textShadow = '4px 4px 10px black'; // Add shadow for emphasis
    document.body.appendChild(poopDiv);

    setTimeout(() => {
      poopDiv.remove();
    }, 30);
  };

  document.getElementById('swipeLeft').addEventListener('click', () => {
    currentIndex = (currentIndex - 1 + cards.length) % cards.length;
    showCard();
    showPoop(); // Show the word "poop" when swiping left
  });

  document.getElementById('swipeRight').addEventListener('click', () => {
    currentIndex = (currentIndex + 1) % cards.length;
    showCard();
  });

  showCard(); // Initial display
});

  </script>
</body>
</html>


{{!-- <!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>For You Page</title>
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.1/dist/css/bootstrap.min.css" rel="stylesheet">
  <style>
    body {
      font-family: Arial, sans-serif;
      background-color: #ffe6f0;
      margin: 0;
      padding: 0;
    }
    .navbar {
      background-color: #ff99cc;
      box-shadow: 0px 4px 10px rgba(0, 0, 0, 0.1);
    }
    .navbar-toggler-icon {
      background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 30 30'%3E%3Cpath stroke='rgba(255,102,178,1)' stroke-width='2' d='M4 7h22M4 15h22M4 23h22'/%3E%3C/svg%3E");
    }
    .nav-link {
      color: white !important;
      font-weight: bold;
      transition: color 0.3s ease;
    }
    .nav-link:hover {
      color: #ffccff !important;
    }
    .border-bottom {
      border-bottom: 3px solid #ff66b2 !important;
    }
      .profile-container {
      max-width: 500px;
      margin: 20px auto;
      padding: 20px;
      background-color: #ff99cc;
      border-radius: 8px;
      box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
      text-align: center;
    }
    .title {
      text-align: center;
      font-size: 1.5rem;
      font-weight: bold;
      margin-top: 20px;
      margin-bottom: 20px;
    }
    .card-stack {
      display: grid;
      text-align: center;
      grid-template-columns: 1fr 1fr;
      gap: 20px;
      
    }
    .content-card {
      width: 100%;
      background-color: #ffe6f0;
      border-radius: 8px;
      box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
      text-align: center;
      padding: 20px;
      transition: transform 0.3s ease, opacity 0.3s ease;
    }
    .btn-swipe {
      margin: 10px;
    }

  

  </style>


  <div class="profile-container">
    <h1 class="title">Discover</h1>
    
    <main class="card-stack" id="cardStack">
      <div class="content-card" style="display: none;">
        <h4>Card 1</h4>
        <p>This is the first card.</p>
      </div>
      <div class="content-card" style="display: none;">
        <h4>Card 2</h4>
        <p>This is the second card.</p>
      </div>
      <div class="content-card" style="display: none;">
        <h4>Card 3</h4>
        <p>This is the third card.</p>
      </div>
    </main>

    <div class="text-center mt-5">
      <button class="btn btn-danger btn-swipe" id="swipeLeft">Swipe Left</button>
      <button class="btn btn-success btn-swipe" id="swipeRight">Swipe Right</button>
    </div>
  </div>

  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.1/dist/js/bootstrap.bundle.min.js"></script>
  <script>
    document.addEventListener('DOMContentLoaded', function () {
      const cardStack = document.getElementById('cardStack');
      let cards = Array.from(cardStack.getElementsByClassName('content-card'));

      if (!cards.length) {
        console.error("No cards found in the stack.");
        return;
      }

      let currentIndex = 0;

      function showCard() {
        cards.forEach((card, index) => {
          card.style.display = index === currentIndex ? 'block' : 'none';
        });
      }

      function swipe(direction) {
        if (direction === 'left') {
          currentIndex = (currentIndex - 1 + cards.length) % cards.length;
        } else if (direction === 'right') {
          currentIndex = (currentIndex + 1) % cards.length;
        }
        showCard();
      }

      document.getElementById('swipeLeft').onclick = () => swipe('left');
      document.getElementById('swipeRight').onclick = () => swipe('right');

      showCard(); // initial display of the first card
    });
  </script>
</body>
</html>
 --}}